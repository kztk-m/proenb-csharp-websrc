-----------------
title: 第5回 課題
-----------------


--------
基本課題
--------

その1
~~~~~

ラベルを

:: 

    Label


ボタンを

:: 

    (Button)

テキストボックスを

:: 

    [          ]

テキストエリアを

::

    +-------------+
    |             |
    |             |
    +-------------+

というアスキーアートで書くことにする．

このとき，Eto.Formを用いて以下のようにコントロールが配置されているウィンドウを作成しなさい．
**ただし，テンプレートから生成されたコードのうち，MainForm.cs のみ変更すること．**

::

     File: [                       ]  (Load) 
     +-------------------------------------+
     |                                     |
     |                                     |
     |                                     |
     |                                     |
     |                                     |
     +-------------------------------------+
     Ready


ただし，以下を満たすこと．

- "File:"，"Ready"の部分は``Label``を用いて実現
- "File:" の右のテキストボックスは``TextBox``を用いて実現
- "(Load)"の部分は``Button``を用いて実現
- 中央のテキストエリアは``TextArea``を用いて実現
- ウィンドウのサイズは十分に大きい（たとえば400x300程）
- TextBoxの部分にはプレースホルダーテキストを設定してもよいし，しなくてもよい
  - ``PlaceholderText``プロパティ（``string``型）を用いると設定できる．


その2
~~~~~

便宜上，上記で"Ready"と書かれている部分を「ステータス行」と呼ぶことにする．


上記のアプリケーションに以下の機能を実装せよ．

- "Load"ボタンが押されたら，テキストボックスに入力されたテキストファイルを開き，
  その内容を中央のテキストボックスに表示する．
  - もしテキストボックスが空だったば，ステータス行にその旨を表示（たとえば，"Error: empty path"など）．
  - もしファイルが見付からなければ，中央のテキストボックスには何もせず，
    ステータス行にその旨を表示（たとえば"Error: File not found"など）
  - ``PathTooLongException``，``DirectoryNotFoundException``，``NotSupportedException``のいずれかが発生したら，
    ステータス行に"Invalid path"などと表示．
  - ``UnauthorizedAccessException``か``System.Security.SecurityException``が発生したら，ステータス行にその旨を表示（たとえば，"Permission denied"など）    
    - 入力されたパスがファイルでなくディレクトリを指している場合も``UnauthorizedAccessException``が発生する
  - ``IOException``が発生した場合の処理は規定しない
  - 読み込みに成功したら，ステータス行に"Load ok"と表示する．

.. hint:: 
   
   テキストボックスに入力されたテキストを取得するには``Text``プロパティを用いる．テキストエリアにテキストを設定するには，
   当該オブジェクトの``Text``を用いる．

   例外処理については `前回 <./w4.html>`__ 参照．

.. hint::

   ``File.ReadAllText(string)`` に渡すパスは相対パスでも可能であるが，この相対パスは作業ディレクトリ基準となる．
   陽に設定等を行わない限り基本的にプログラムを起動した場所（たとえば，``dotnet run``を実行した場所）が，作業ディレクトリとなる．
   ただし，Visual Studioの三角ボタンから実行するときはその実行ファイルがある場所，そしてMacにて``open``で``.app``バンドルを開く
   ときは``/``が作業ディレクトリとなるようであった．
   この演習では絶対パス（Windowsだと``C:\``など，Macだと``/``から始まるもの）を使うのがよいだろう．


--------
発展課題
--------

上記アプリケーションを拡張し，"Save"ボタンを追加せよ．コントロールの配置は以下のようにせよ．

::

     File: [                ]  (Load) (Save)
     +-------------------------------------+
     |                                     |
     |                                     |
     |                                     |
     |                                     |
     |                                     |
     +-------------------------------------+
     Ready


"Save"ボタンが押されたときには，その時点でのテキストエリアの内容を，
その時点でのテキストボックスに入力されたファイルに保存する機能を実装せよ．

ただし，

- もしテキストボックス内が空であれば，ステータス行にその旨を表示する．
- もしファイルが見付からなければそのファイルを作成するようにし，
  ファイルが見付かったならばそのファイルを上書きするようにする．
- ``PathTooLongException``，``DirectoryNotFoundException``，``NotSupportedException``のいずれかが発生したら，
  ステータス行に"Invalid path"などと表示．
- ``UnauthorizedAccessException``か``SecurityException``が発生したら，ステータス行にその旨を表示（たとえば，"Permission denied"など）    
- ``IOException``が発生した場合の処理は規定しない
- 書き込みに成功したら，ステータス行に"Save ok"と表示する
